package com.objava.naucnih.radova.configuration;

public class DatabaseClientManager extends LoggingObject implements FactoryBean<DatabaseClient>, DisposableBean {

	private DatabaseClientConfig config;
	private DatabaseClient client;

	public DatabaseClientManager() {
		super();
	}

	public DatabaseClientManager(DatabaseClientConfig config) {
		this();
		this.config = config;
	}

	@Override
	public DatabaseClient getObject() {
		if (client == null) {
			if (logger.isInfoEnabled()) {
				logger.info("Connecting to REST server with: " + config);
			}
			client = new DefaultConfiguredDatabaseClientFactory().newDatabaseClient(config);
		}
		return client;
	}

	@Override
	public Class<?> getObjectType() {
		return DatabaseClient.class;
	}

	@Override
	public boolean isSingleton() {
		return true;
	}

	@Override
	public void destroy() {
		if (client != null) {
			if (logger.isInfoEnabled()) {
				logger.info("Releasing client with username: " + config.getUsername());
			}
			client.release();
		}
	}

	public void setConfig(DatabaseClientConfig config) {
		this.config = config;
	}
}
